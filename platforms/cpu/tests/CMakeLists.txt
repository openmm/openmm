#
# Testing
#

ENABLE_TESTING()

SET( INCLUDE_SERIALIZATION FALSE )
#SET( INCLUDE_SERIALIZATION TRUE )

IF( INCLUDE_SERIALIZATION )
    INCLUDE_DIRECTORIES(${OPENMM_DIR}/serialization/include)
    SET( SHARED_OPENMM_SERIALIZATION "OpenMMSerialization" )
ENDIF( INCLUDE_SERIALIZATION )

# Automatically create tests using files named "Test*.cpp"
FILE(GLOB TEST_PROGS "*Test*.cpp")
FOREACH(TEST_PROG ${TEST_PROGS})
    GET_FILENAME_COMPONENT(TEST_ROOT ${TEST_PROG} NAME_WE)

    IF(TEST_ROOT MATCHES ".*ConstantPotentialForce.*")
        ADD_EXECUTABLE(${TEST_ROOT} ${TEST_PROG})
        INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/plugins/cpupme/include)
        IF(OPENMM_BUILD_SHARED_LIB)
            TARGET_LINK_LIBRARIES(${TEST_ROOT} OpenMMPME)
        ELSE(OPENMM_BUILD_SHARED_LIB)
            TARGET_LINK_LIBRARIES(${TEST_ROOT} OpenMMPME_static)
        ENDIF(OPENMM_BUILD_SHARED_LIB)
    ELSE()
        ADD_EXECUTABLE(${TEST_ROOT} ${TEST_PROG})
    ENDIF()

    IF (OPENMM_BUILD_SHARED_LIB)
        TARGET_LINK_LIBRARIES(${TEST_ROOT} ${SHARED_TARGET})
    ELSE (OPENMM_BUILD_SHARED_LIB)
        TARGET_LINK_LIBRARIES(${TEST_ROOT} ${STATIC_TARGET})
    ENDIF (OPENMM_BUILD_SHARED_LIB)
    SET_TARGET_PROPERTIES(${TEST_ROOT} PROPERTIES LINK_FLAGS "${EXTRA_LINK_FLAGS}" COMPILE_FLAGS "${EXTRA_COMPILE_FLAGS}")
    ADD_TEST(${TEST_ROOT} ${EXECUTABLE_OUTPUT_PATH}/${TEST_ROOT} single)

ENDFOREACH(TEST_PROG ${TEST_PROGS})
